version: '3.8'

services:
  # Frontend React application
  client:
    build:
      context: ./client
      dockerfile: ../docker/client.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
    networks:
      - app-network

  # Backend Node.js/Express API
  server:
    build:
      context: ./server
      dockerfile: ../docker/server.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/rehearsal-scheduler
      - JWT_SECRET=development_jwt_secret
      - JWT_EXPIRES_IN=7d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app-network

  # MongoDB database
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Redis for caching and real-time features
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: